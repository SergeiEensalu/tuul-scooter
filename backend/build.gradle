plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.tuul'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

configurations {
    developmentOnly
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'io.micrometer:micrometer-registry-otlp'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.google.firebase:firebase-admin:9.2.0'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    developmentOnly("org.springframework.boot:spring-boot-devtools")
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('prepareLocalConfig') {
    doLast {
        def src = file("src/main/resources/application.example.yml")
        def dest = file("src/main/resources/application.yml")
        if (!dest.exists()) {
            println "Copying example config to application.yml"
            dest.text = src.text
        } else {
            println "application.yml already exists, skipping copy"
        }
    }
}

// Make it run before compilation
tasks.named('processResources') {
    dependsOn tasks.named('prepareLocalConfig')
}
